/*Responsive Grid View*/
/*When setting width, padding and border are not included so elements tend to look bigger than specified. Box sizing is the property that references these specifications together and setting it to border-box means that the width specified will have calculated width+padding+border.*/
* {
  box-sizing: border-box;
  border: 1px solid black;
}

/*Setting percent size for 12 grid system
100%/12=8.33%
*/
.col-1 {width: 8.33%}
.col-2 {width:16.66%;}
.col-3 {width:25%;}
.col-4 {width:33.33%;}
.col-5 {width:41.66%;}
.col-6 {width:50%;}
.col-7 {width:58.33%;}
.col-8 {width:66.66%;}
.col-9 {width:75%;}
.col-10 {width:83.33%;}
.col-11 {width:91.66%;}
.col-12 {width:100%;}

/*set each col to float left with a padding of 15px*/
[class*="col-"] {
float: left;
padding: 15px
border: 1px solid red;
}

/*offset columns*/
.col-offset-1 {margin-left: 8.33%}
.col-offset-2 {margin-left: 16.66%}
.col-offset-3 {margin-left: 25%}
.col-offset-4 {margin-left: 33.3%}
.col-offset-5 {margin-left:41.66%;}
.col-offset-6 {margin-left: 50%}
.col-offset-7 {margin-left: 58.33%}
.col-offset-8 {margin-left: 66.66%}
.col-offset-9 {margin-left: 75%}
.col-offset-10 {margin-left: 83.33%}
.col-offset-11 {margin-left: 91.66%}

/*Ensures content stays inside columns*/
.row:after {
    content: "";
    clear: both;
    display: block;
}

/*Design for mobile first*/
/*no media queries since this is the default*/
CSS-Code {

}


/*Break points in the form of media queries*/
/*Set the media [type] screen for computers, tablets, smartphones. Use [and] to combine rules. When scaling up, at []px these changes will take effect up until it reaches []px then it will break again. Desktop being the largest expected desplay only needs a min-width.*/

/*Tablet*/
@media type and (min-width: 0px) and (max-width: 0px) {
  CSS-Code {

  }
}

/*Desktop*/
@media type and (min-width: 0px) {
  CSS-Code {

  }
}